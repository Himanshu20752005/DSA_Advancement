class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        // vector<int> ans;

        // int s1 = size(nums1);
        // int s2 = size(nums2);
        // int n1 , n2;
        // if(s1>s2){
        //   n1 = s2 ; 
        //   n2 = s1 ;
        // } else{
        //   n1 = s1 ; 
        //   n2 = s2 ;
        // }

        // for(int i = 0 ; i<n1 ; i++){
        //     for(int j = 0 ; j<n1 ; j++){
        //        if(s1 > s2){

        //          if(nums2[i] == nums1[j]){
        //             ans.push_back(nums2[i]);
        //             nums1.erase( nums1.begin() + j);
        //             break;
        //          }else
        //          continue;

        //        }else{
        //           if(nums1[i] == nums2[j]){
        //             ans.push_back(nums1[i]);
        //             nums2.erase( nums2.begin() + j);
        //             break;
        //          }else
        //          continue;
        //        }
        //     }
        // }

        // return ans;

        //OR
int maxi1 = *max_element(nums1.begin(), nums1.end());
        int maxi2 = *max_element(nums2.begin(), nums2.end());
        bool pass = 0;

        if (maxi1 > maxi2) {
            maxi1 = maxi2;
            pass = 1;
        }

        vector<int> ans(maxi1 + 1, 0);
        vector<int> inter;
        if (pass) {
            for (int i = 0; i < nums2.size(); i++) ans[nums2[i]]++;
            for (int i = 0; i < nums1.size(); i++) {
                if (nums1[i]<=maxi1 && ans[nums1[i]] > 0) {
                    inter.push_back(nums1[i]);
                    ans[nums1[i]]--;
                }
            }
        } else {
            for (int i = 0; i < nums1.size(); i++) ans[nums1[i]]++;
            for (int i = 0; i < nums2.size(); i++) {
                if (nums2[i]<=maxi1 && (ans[nums2[i]] > 0)) {
                    inter.push_back(nums2[i]);
                    ans[nums2[i]]--;
                }
            }
        }

        return inter;
    }
};
      
